name: PullRequest

on: [pull_request]

jobs:
  buildTest:
    name: Build & Test JDK ${{ matrix.java_version }}
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [1.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.0
      - name: Decrypt keystore
        run: cd android && ./signing/decrypt.sh
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
      - name: Build project
        run: cd android && ./gradlew assembleDebug
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
      - name: cleanup keystore
        run: cd android && ./signing/cleanup.sh
      - name: Run tests
        run: cd android && ./gradlew test
#      - name: Run instrumentation tests
#        uses: malinskiy/action-android/emulator-run-cmd@release/0.1.0
#        with:
#          cmd: cd android && ./gradlew cAT
#          api: 28
#          tag: default
#          abi: x86
#      - name: Archive Espresso results
#        uses: actions/upload-artifact@v2.2.0
#        with:
#          name: MLKit-Espresso-report
#          path: android/app/build/reports/androidTests/connected
#      - name: Save logcat output
#        uses: actions/upload-artifact@master
#        if: failure()
#        with:
#          name: MLKit-logcat
#          path: android/artifacts/logcat.log
#      - name: Archive screenshots
#        uses: actions/upload-artifact@v2.2.0
#        with:
#          name: MLKit-Screenshots
#          path: android/screenshots/adb
      - name: cleanup keystore
        run: cd android && ./signing/cleanup.sh
  buildRelease:
    name: Build release JDK ${{ matrix.java_version }}
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [1.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.0
      - name: Decrypt keystore
        run: cd android && ./signing/decrypt.sh
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
      - name: Build project
        run: cd android && ./gradlew assembleRelease
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
      - name: cleanup keystore
        run: cd android && ./signing/cleanup.sh
  Check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0
      - name: Install JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.0
      - name: Code checks
        run: cd android && ./gradlew check
      - name: Archive Lint report
        uses: actions/upload-artifact@v2.2.1
        if: ${{ always() }}
        with:
          name: MLKit-Lint-report
          path: |
            android/**/build/reports/lint-results.html
            android/**/**/build/reports/lint-results.html
